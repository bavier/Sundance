using SundanceStdFwk::CellFilter;
using SundanceStdFwk::QuadratureFamily;

/*! \mainpage Sundance 

<H2> Introduction </H2>

Sundance is a library of C++ components with which one can quickly develop 
high-performance parallel PDE simulators. It is built on top of an engine
for automatic differentiation of symbolic objects, thereby enabling
differentiable simulations for use in optimization, uncertainty 
quantification, and adaptive error control.

<H2> Tutorial </H2>

A <A HREF="../Tutorial/Tutorial.pdf"> tutorial </A>
on setting up linear and nonlinear PDE simulations is available in 
<A HREF="../Tutorial/Tutorial.pdf"> PDF </A> format.

<H2> FAQ </H2>

<ul>
<li> \ref faq_page 
</ul>


<H2> Online User's Guide </H2>


<H4> Components for Simulation Setup </H4>
<ul> 
<li> \ref mesh_source are used to create, import, or transform discrete geometry
<li> \ref cell_filter are used to define subregions (e.g., node sets, side sets)
<li> \ref exprs are used to define equations and boundary conditions
<li> \ref discretefuncs are used to represent finite-element spaces and fields
</ul>

<H4> Problem Setup </H4>

<ul> 
<li> Setup of \ref linear_problems
<li> Setup of \ref nonlinear_problems
</ul>

<H4> Solvers </H4>

Sundance does not have its own solvers; rather, it 
uses the Trilinos family of solvers. These are fully documented at
the <A HREF="http://software.sandia.gov/Trilinos/"> Trilinos Website </A>
so only a brief description is given here, concentrating on user input
parameters.  

<ul>
<li> \ref linear_solvers 
<li> \ref nonlinear_solvers 
</ul>

<H4> Output and Visualization </H4>

<H4> Examples </H4>

Some example simulators developed in Sundance
can be found <A HREF="examples.html"> here </A>

*/
