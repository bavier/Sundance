# Makefile.in generated by automake 1.6.3 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

#@HEADER
# ************************************************************************
# 
#                              Sundance
#                 Copyright (2005) Sandia Corporation
# 
# Copyright (year first published) Sandia Corporation.  Under the terms 
# of Contract DE-AC04-94AL85000 with Sandia Corporation, the U.S. Government 
# retains certain rights in this software.
# 
# This library is free software; you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as
# published by the Free Software Foundation; either version 2.1 of the
# License, or (at your option) any later version.
#  
# This library is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#                                                                                 
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
# USA                                                                                
# Questions? Contact Kevin Long (krlong@sandia.gov), 
# Sandia National Laboratories, Livermore, California, USA
# 
# ************************************************************************
#@HEADER

#@HEADER
# ************************************************************************
# 
#                               Sundance
#                 Copyright (2002) Sandia Corporation
# 
#
# Copyright (2001) Sandia Corportation. Under the terms of Contract 
# DE-AC04-94AL85000, there is a non-exclusive license for use of this 
# work by or on behalf of the U.S. Government.  Export of this program
# may require a license from the United States Government.
# 
# NOTICE:  The United States Government is granted for itself and others
# acting on its behalf a paid-up, nonexclusive, irrevocable worldwide
# license in ths data to reproduce, prepare derivative works, and
# perform publicly and display publicly.  Beginning five (5) years from
# July 25, 2001, the United States Government is granted for itself and
# others acting on its behalf a paid-up, nonexclusive, irrevocable
# worldwide license in this data to reproduce, prepare derivative works,
# distribute copies to the public, perform publicly and display
# publicly, and to permit others to do so.
# 
# NEITHER THE UNITED STATES GOVERNMENT, NOR THE UNITED STATES DEPARTMENT
# OF ENERGY, NOR SANDIA CORPORATION, NOR ANY OF THEIR EMPLOYEES, MAKES
# ANY WARRANTY, EXPRESS OR IMPLIED, OR ASSUMES ANY LEGAL LIABILITY OR
# RESPONSIBILITY FOR THE ACCURACY, COMPLETENESS, OR USEFULNESS OF ANY
# INFORMATION, APPARATUS, PRODUCT, OR PROCESS DISCLOSED, OR REPRESENTS
# THAT ITS USE WOULD NOT INFRINGE PRIVATELY OWNED RIGHTS.
# 
# ************************************************************************
#@HEADER

# ------------------------------------------------------------------------
#
# Makefile.common is intended to be included by the subdirectory makefiles.
# In this file, we define standard macros for include paths, library paths,
# and library names used by Sundance. 
#
# This file is NOT modifed by automake or autoconf. 
#
# ------------------------------------------------------------------------
SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ../..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_HEADER = $(INSTALL_DATA)
transform = @program_transform_name@
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
OBJEXT = @OBJEXT@
PATH_SEPARATOR = @PATH_SEPARATOR@

EXEEXT = .exe
ALTERNATE_AR = @ALTERNATE_AR@
AMTAR = @AMTAR@
AWK = @AWK@
CC = @CC@
CHACO_LIB = @CHACO_LIB@
CXX = @CXX@
DEPDIR = @DEPDIR@
F77 = @F77@
FIAT_BUILD_DIR = @FIAT_BUILD_DIR@
FIAT_STR = @FIAT_STR@
GNU_HAVE_SWIG = @GNU_HAVE_SWIG@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
MAINT = @MAINT@
MOOCHO_STR = @MOOCHO_STR@
MPI_CC_EXISTS = @MPI_CC_EXISTS@
MPI_CXX = @MPI_CXX@
MPI_CXX_EXISTS = @MPI_CXX_EXISTS@
MPI_F77_EXISTS = @MPI_F77_EXISTS@
PACKAGE = @PACKAGE@
PYTHON = @PYTHON@
PYTHON_CSPEC = @PYTHON_CSPEC@
PYTHON_EXECPREFIX = @PYTHON_EXECPREFIX@
PYTHON_LSPEC = @PYTHON_LSPEC@
PYTHON_PREFIX = @PYTHON_PREFIX@


# ------------------------------------------------------------------------
#
# include macros specified by Trilinos
#
# ------------------------------------------------------------------------
RANLIB = $(TEUCHOS_RANLIB)
STRIP = @STRIP@
SUNDANCE_BUILD_DIRECTORY = @SUNDANCE_BUILD_DIRECTORY@
SUNDIALS_BUILD_DIR = @SUNDIALS_BUILD_DIR@
SUNDIALS_STR = @SUNDIALS_STR@
SWIG = @SWIG@
SWIG_LIB = @SWIG_LIB@
SWIG_PYTHON_CPPFLAGS = @SWIG_PYTHON_CPPFLAGS@
SWIG_PYTHON_OPT = @SWIG_PYTHON_OPT@
TRILINOS_DIR = @TRILINOS_DIR@
VERSION = @VERSION@
WADPY = @WADPY@
WITH_SWIG = @WITH_SWIG@
ac_aux_dir = @ac_aux_dir@
am__include = @am__include@
am__quote = @am__quote@
install_sh = @install_sh@

noinst_PROGRAMS = $(TESTS_SRC:%=%.exe)

TESTS_SRC = PostPotentialFlow RadiationDiffusion1D PressureVessel2D \
VSNS2D Exo2Triangle PressureStabilizedNS2D PressureStabilizedNS3D \
ReadField CubicCDR ControlCDR


TESTS = $(noinst_PROGRAMS:%.exe=%.tst)

REQUIREMENTS = $(top_builddir)/src-std-framework/libsundanceStdFwk.a \
$(top_builddir)/src-std-mesh/libsundanceStdMesh.a \
$(top_builddir)/src-core/libsundanceCore.a \
$(top_builddir)/src-utils/libsundanceUtils.a \
$(top_builddir)/src-solvers/libTSFExtended.a


PostPotentialFlow_SOURCES = $(srcdir)/PostPotentialFlow.cpp

PostPotentialFlow_DEPENDENCIES = \
$(top_builddir)/src-std-framework/libsundanceStdFwk.a \
$(top_builddir)/src-std-mesh/libsundanceStdMesh.a \
$(top_builddir)/src-core/libsundanceCore.a \
$(top_builddir)/src-utils/libsundanceUtils.a $(top_builddir)/src-solvers/libTSFExtended.a


PostPotentialFlow_CXXFLAGS = $(STD_FWK_INCLUDES)

PostPotentialFlow_LDADD = $(STD_FWK_LIBS) 

Exo2Triangle_SOURCES = $(srcdir)/Exo2Triangle.cpp

Exo2Triangle_DEPENDENCIES = \
$(top_builddir)/src-std-framework/libsundanceStdFwk.a \
$(top_builddir)/src-std-mesh/libsundanceStdMesh.a \
$(top_builddir)/src-core/libsundanceCore.a \
$(top_builddir)/src-utils/libsundanceUtils.a $(top_builddir)/src-solvers/libTSFExtended.a


Exo2Triangle_CXXFLAGS = $(STD_FWK_INCLUDES)

Exo2Triangle_LDADD = $(STD_FWK_LIBS) 

RadiationDiffusion1D_SOURCES = $(srcdir)/RadiationDiffusion1D.cpp

RadiationDiffusion1D_DEPENDENCIES = \
$(top_builddir)/src-std-framework/libsundanceStdFwk.a \
$(top_builddir)/src-std-mesh/libsundanceStdMesh.a \
$(top_builddir)/src-core/libsundanceCore.a \
$(top_builddir)/src-utils/libsundanceUtils.a $(top_builddir)/src-solvers/libTSFExtended.a


RadiationDiffusion1D_CXXFLAGS = $(STD_FWK_INCLUDES)

RadiationDiffusion1D_LDADD = $(STD_FWK_LIBS) 

PressureVessel2D_SOURCES = $(srcdir)/PressureVessel2D.cpp

PressureVessel2D_DEPENDENCIES = \
$(top_builddir)/src-std-framework/libsundanceStdFwk.a \
$(top_builddir)/src-std-mesh/libsundanceStdMesh.a \
$(top_builddir)/src-core/libsundanceCore.a \
$(top_builddir)/src-utils/libsundanceUtils.a $(top_builddir)/src-solvers/libTSFExtended.a


PressureVessel2D_CXXFLAGS = $(STD_FWK_INCLUDES)

PressureVessel2D_LDADD = $(STD_FWK_LIBS) 

VSNS2D_SOURCES = $(srcdir)/VSNS2D.cpp

VSNS2D_DEPENDENCIES = \
$(top_builddir)/src-std-framework/libsundanceStdFwk.a \
$(top_builddir)/src-std-mesh/libsundanceStdMesh.a \
$(top_builddir)/src-core/libsundanceCore.a \
$(top_builddir)/src-utils/libsundanceUtils.a $(top_builddir)/src-solvers/libTSFExtended.a


VSNS2D_CXXFLAGS = $(STD_FWK_INCLUDES)

VSNS2D_LDADD = $(STD_FWK_LIBS) 

PressureStabilizedNS2D_SOURCES = $(srcdir)/PressureStabilizedNS2D.cpp

PressureStabilizedNS2D_DEPENDENCIES = \
$(top_builddir)/src-std-framework/libsundanceStdFwk.a \
$(top_builddir)/src-std-mesh/libsundanceStdMesh.a \
$(top_builddir)/src-core/libsundanceCore.a \
$(top_builddir)/src-utils/libsundanceUtils.a $(top_builddir)/src-solvers/libTSFExtended.a


PressureStabilizedNS2D_CXXFLAGS = $(STD_FWK_INCLUDES)

PressureStabilizedNS2D_LDADD = $(STD_FWK_LIBS) 

PressureStabilizedNS3D_SOURCES = $(srcdir)/PressureStabilizedNS3D.cpp

PressureStabilizedNS3D_DEPENDENCIES = \
$(top_builddir)/src-std-framework/libsundanceStdFwk.a \
$(top_builddir)/src-std-mesh/libsundanceStdMesh.a \
$(top_builddir)/src-core/libsundanceCore.a \
$(top_builddir)/src-utils/libsundanceUtils.a $(top_builddir)/src-solvers/libTSFExtended.a


PressureStabilizedNS3D_CXXFLAGS = $(STD_FWK_INCLUDES)

PressureStabilizedNS3D_LDADD = $(STD_FWK_LIBS) 

ReadField_SOURCES = $(srcdir)/ReadField.cpp

ReadField_DEPENDENCIES = \
$(top_builddir)/src-std-framework/libsundanceStdFwk.a \
$(top_builddir)/src-std-mesh/libsundanceStdMesh.a \
$(top_builddir)/src-core/libsundanceCore.a \
$(top_builddir)/src-utils/libsundanceUtils.a $(top_builddir)/src-solvers/libTSFExtended.a


ReadField_CXXFLAGS = $(STD_FWK_INCLUDES)

ReadField_LDADD = $(STD_FWK_LIBS) 

CubicCDR_SOURCES = $(srcdir)/CubicCDR.cpp

CubicCDR_DEPENDENCIES = \
$(top_builddir)/src-std-framework/libsundanceStdFwk.a \
$(top_builddir)/src-std-mesh/libsundanceStdMesh.a \
$(top_builddir)/src-core/libsundanceCore.a \
$(top_builddir)/src-utils/libsundanceUtils.a $(top_builddir)/src-solvers/libTSFExtended.a


CubicCDR_CXXFLAGS = $(STD_FWK_INCLUDES)

CubicCDR_LDADD = $(STD_FWK_LIBS) 

ControlCDR_SOURCES = $(srcdir)/ControlCDR.cpp

ControlCDR_DEPENDENCIES = \
$(top_builddir)/src-std-framework/libsundanceStdFwk.a \
$(top_builddir)/src-std-mesh/libsundanceStdMesh.a \
$(top_builddir)/src-core/libsundanceCore.a \
$(top_builddir)/src-utils/libsundanceUtils.a $(top_builddir)/src-solvers/libTSFExtended.a


ControlCDR_CXXFLAGS = $(STD_FWK_INCLUDES)

ControlCDR_LDADD = $(STD_FWK_LIBS) 

SUNDANCE_DIR = $(top_srcdir)


# ------------------------------------------------------------------------
#
# Specify libraries and library search paths. 
# 
# - SUNDANCE_LIBS and TRILINOS_LIBS are defined below. 
# - LAPACK_LIBS, BLAS_LIBS, and FLIBS are defined automatically by autoconf. 
#
# ------------------------------------------------------------------------
SOLVERS_LIB_PATH = \
-L$(top_builddir)/src-solvers


SOLVERS_INCLUDE_PATH = \
-I$(top_builddir)/src-solvers \
-I$(top_srcdir)/src-solvers/Vectors \
-I$(top_srcdir)/src-solvers/Utils \
-I$(top_srcdir)/src-solvers/Concrete \
-I$(top_srcdir)/src-solvers/Operators \
-I$(top_srcdir)/src-solvers/LinearSolvers \
-I$(top_srcdir)/src-solvers/NonlinearSolvers \
-I$(top_srcdir)/src-solvers/Preconditioners \
-I$(top_srcdir)/src-solvers/Adapters \
-I$(top_srcdir)/src-solvers/Testing \
-I$(top_builddir)/src-solvers/Vectors \
-I$(top_builddir)/src-solvers/Utils \
-I$(top_builddir)/src-solvers/Concrete \
-I$(top_builddir)/src-solvers/Operators \
-I$(top_builddir)/src-solvers/LinearSolvers \
-I$(top_builddir)/src-solvers/NonlinearSolvers \
-I$(top_builddir)/src-solvers/Preconditioners \
-I$(top_builddir)/src-solvers/Testing \
-I$(top_builddir)/src-solvers/Adapters


SOLVERS_LIBS = $(SOLVERS_LIB_PATH) -lTSFExtended $(TRILINOS_LIBS) $(SUNDIALS_LIBS)

SOLVERS_INCLUDES = $(SOLVERS_INCLUDE_PATH) $(TRILINOS_INCLUDES) $(SUNDIALS_INCLUDES)

UTIL_LIB_PATH = -L$(top_builddir)/src-utils $(SOLVERS_LIB_PATH) 

UTIL_LIBS = $(UTIL_LIB_PATH) -lsundanceUtils $(SOLVERS_LIBS)

UTIL_INCLUDES = \
-I$(top_builddir)/src-utils \
-I$(top_srcdir)/src-utils/Utilities \
-I$(top_builddir)/src-utils/Utilities \
$(SOLVERS_INCLUDES)


CORE_LIBS = $(CORE_LIB_PATH) -lsundanceCore $(UTIL_LIBS)

CORE_LIB_PATH = \
-L$(top_builddir)/src-core 


CORE_INCLUDE_PATH = \
-I$(top_builddir)/src-core \
-I$(top_srcdir)/src-core/UserExprs \
-I$(top_srcdir)/src-core/InternalExprs \
-I$(top_srcdir)/src-core/Evaluation \
-I$(top_srcdir)/src-core/FrameworkInterface \
-I$(top_srcdir)/src-core/Spectral \
-I$(top_srcdir)/src-core/SymbolicTransformations \
-I$(top_srcdir)/src-core/TestingUtilities \
-I$(top_builddir)/src-core/UserExprs \
-I$(top_builddir)/src-core/InternalExprs \
-I$(top_builddir)/src-core/Evaluation \
-I$(top_builddir)/src-core/FrameworkInterface \
-I$(top_builddir)/src-core/TestingUtilities \
-I$(top_builddir)/src-core/Spectral \
-I$(top_builddir)/src-core/SymbolicTransformations 


CORE_INCLUDES = $(CORE_INCLUDE_PATH) $(UTIL_INCLUDES) 

STD_MESH_LIB_PATH = \
-L$(top_builddir)/src-std-mesh 


STD_MESH_LIBS = $(STD_MESH_LIB_PATH) -lsundanceStdMesh $(UTIL_LIBS)

STD_MESH_INCLUDE_PATH = \
-I$(top_builddir)/src-std-mesh \
-I$(top_srcdir)/src-std-mesh/Concrete \
-I$(top_srcdir)/src-std-mesh/Interface \
-I$(top_srcdir)/src-std-mesh/Sources \
-I$(top_srcdir)/src-std-mesh/Transformations \
-I$(top_srcdir)/src-std-mesh/Writers \
-I$(top_builddir)/src-std-mesh/Concrete \
-I$(top_builddir)/src-std-mesh/Interface \
-I$(top_builddir)/src-std-mesh/Sources \
-I$(top_builddir)/src-std-mesh/Transformations \
-I$(top_builddir)/src-std-mesh/Writers 


STD_MESH_INCLUDES = $(STD_MESH_INCLUDE_PATH) $(UTIL_INCLUDES)

STD_FWK_LIB_PATH = \
-L$(top_builddir)/src-std-framework 


STD_FWK_INCLUDE_PATH = \
-I$(top_builddir)/src-std-framework \
-I$(top_srcdir)/src-std-framework/CellFilter \
-I$(top_srcdir)/src-std-framework/Elements \
-I$(top_srcdir)/src-std-framework/DOFMapping \
-I$(top_srcdir)/src-std-framework/Assembly \
-I$(top_srcdir)/src-std-framework/Problem \
-I$(top_builddir)/src-std-framework/CellFilter \
-I$(top_builddir)/src-std-framework/Elements \
-I$(top_builddir)/src-std-framework/DOFMapping \
-I$(top_builddir)/src-std-framework/Assembly \
-I$(top_builddir)/src-std-framework/Problem


STD_FWK_INCLUDES = $(STD_FWK_INCLUDE_PATH) $(STD_MESH_INCLUDE_PATH) \
$(CORE_INCLUDE_PATH) $(UTIL_INCLUDES) $(FIAT_INCLUDE) $(FIAT_BLITZ_INCLUDE)


STD_FWK_LIBS = $(STD_FWK_LIB_PATH) $(STD_MESH_LIB_PATH) $(CORE_LIB_PATH) \
-lsundanceStdFwk -lsundanceStdMesh -lsundanceCore $(FIAT_LIBS) $(FIAT_BLITZ_LIBS) $(UTIL_LIBS) 


XML_LIB_PATH = \
-L$(top_builddir)/src-xml 


XML_INCLUDE_PATH = \
-I$(top_srcdir)/src-xml \
-I$(top_builddir)/src-xml 


XML_INCLUDES = $(XML_INCLUDE_PATH) $(STD_FWK_INCLUDE_PATH) \
$(STD_MESH_INCLUDE_PATH) $(CORE_INCLUDE_PATH) $(UTIL_INCLUDES)


XML_LIBS = $(XML_LIB_PATH) $(STD_FWK_LIB_PATH) $(STD_MESH_LIB_PATH) \
$(CORE_LIB_PATH) -lsundanceXML -lsundanceStdFwk \
-lsundanceStdMesh -lsundanceCore $(UTIL_LIBS) 


CFLAGS = $(TEUCHOS_CFLAGS)
FFLAGS = $(TEUCHOS_FFLAGS)
CXXFLAGS = $(TEUCHOS_CXXFLAGS)
LDFLAGS = $(TEUCHOS_LDFLAGS)

MPI_LIBS = $(TEUCHOS_MPI_LIBS)
MPI_LIBDIR = $(TEUCHOS_MPI_LIBDIR)
MPI_INC = $(TEUCHOS_MPI_INC)
MPI_DIR = $(TEUCHOS_MPI_DIR)

FLIBS = $(TEUCHOS_FLIBS)
BLAS_LIBS = $(TEUCHOS_BLAS_LIBS)
LAPACK_LIBS = $(TEUCHOS_LAPACK_LIBS)
subdir = examples-tutorial/c++
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/src-solvers/TSF_config.h \
	$(top_builddir)/src-utils/SundanceConfig.h
CONFIG_CLEAN_FILES =
noinst_PROGRAMS = PostPotentialFlow$(EXEEXT) \
	RadiationDiffusion1D$(EXEEXT) PressureVessel2D$(EXEEXT) \
	VSNS2D$(EXEEXT) Exo2Triangle$(EXEEXT) \
	PressureStabilizedNS2D$(EXEEXT) PressureStabilizedNS3D$(EXEEXT) \
	ReadField$(EXEEXT) CubicCDR$(EXEEXT) ControlCDR$(EXEEXT)
PROGRAMS = $(noinst_PROGRAMS)

am_ControlCDR_OBJECTS = ControlCDR-ControlCDR.$(OBJEXT)
ControlCDR_OBJECTS = $(am_ControlCDR_OBJECTS)
ControlCDR_LDFLAGS =
am_CubicCDR_OBJECTS = CubicCDR-CubicCDR.$(OBJEXT)
CubicCDR_OBJECTS = $(am_CubicCDR_OBJECTS)
CubicCDR_LDFLAGS =
am_Exo2Triangle_OBJECTS = Exo2Triangle-Exo2Triangle.$(OBJEXT)
Exo2Triangle_OBJECTS = $(am_Exo2Triangle_OBJECTS)
Exo2Triangle_LDFLAGS =
am_PostPotentialFlow_OBJECTS = \
	PostPotentialFlow-PostPotentialFlow.$(OBJEXT)
PostPotentialFlow_OBJECTS = $(am_PostPotentialFlow_OBJECTS)
PostPotentialFlow_LDFLAGS =
am_PressureStabilizedNS2D_OBJECTS = \
	PressureStabilizedNS2D-PressureStabilizedNS2D.$(OBJEXT)
PressureStabilizedNS2D_OBJECTS = $(am_PressureStabilizedNS2D_OBJECTS)
PressureStabilizedNS2D_LDFLAGS =
am_PressureStabilizedNS3D_OBJECTS = \
	PressureStabilizedNS3D-PressureStabilizedNS3D.$(OBJEXT)
PressureStabilizedNS3D_OBJECTS = $(am_PressureStabilizedNS3D_OBJECTS)
PressureStabilizedNS3D_LDFLAGS =
am_PressureVessel2D_OBJECTS = \
	PressureVessel2D-PressureVessel2D.$(OBJEXT)
PressureVessel2D_OBJECTS = $(am_PressureVessel2D_OBJECTS)
PressureVessel2D_LDFLAGS =
am_RadiationDiffusion1D_OBJECTS = \
	RadiationDiffusion1D-RadiationDiffusion1D.$(OBJEXT)
RadiationDiffusion1D_OBJECTS = $(am_RadiationDiffusion1D_OBJECTS)
RadiationDiffusion1D_LDFLAGS =
am_ReadField_OBJECTS = ReadField-ReadField.$(OBJEXT)
ReadField_OBJECTS = $(am_ReadField_OBJECTS)
ReadField_LDFLAGS =
am_VSNS2D_OBJECTS = VSNS2D-VSNS2D.$(OBJEXT)
VSNS2D_OBJECTS = $(am_VSNS2D_OBJECTS)
VSNS2D_LDFLAGS =

DEFS = @DEFS@
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)/src-solvers -I$(top_builddir)/src-utils
CPPFLAGS = @CPPFLAGS@
LIBS = @LIBS@
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/ControlCDR-ControlCDR.Po \
@AMDEP_TRUE@	./$(DEPDIR)/CubicCDR-CubicCDR.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Exo2Triangle-Exo2Triangle.Po \
@AMDEP_TRUE@	./$(DEPDIR)/PostPotentialFlow-PostPotentialFlow.Po \
@AMDEP_TRUE@	./$(DEPDIR)/PressureStabilizedNS2D-PressureStabilizedNS2D.Po \
@AMDEP_TRUE@	./$(DEPDIR)/PressureStabilizedNS3D-PressureStabilizedNS3D.Po \
@AMDEP_TRUE@	./$(DEPDIR)/PressureVessel2D-PressureVessel2D.Po \
@AMDEP_TRUE@	./$(DEPDIR)/RadiationDiffusion1D-RadiationDiffusion1D.Po \
@AMDEP_TRUE@	./$(DEPDIR)/ReadField-ReadField.Po \
@AMDEP_TRUE@	./$(DEPDIR)/VSNS2D-VSNS2D.Po
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
DIST_SOURCES = $(ControlCDR_SOURCES) $(CubicCDR_SOURCES) \
	$(Exo2Triangle_SOURCES) $(PostPotentialFlow_SOURCES) \
	$(PressureStabilizedNS2D_SOURCES) \
	$(PressureStabilizedNS3D_SOURCES) $(PressureVessel2D_SOURCES) \
	$(RadiationDiffusion1D_SOURCES) $(ReadField_SOURCES) \
	$(VSNS2D_SOURCES)
DIST_COMMON = Makefile.am Makefile.in
SOURCES = $(ControlCDR_SOURCES) $(CubicCDR_SOURCES) $(Exo2Triangle_SOURCES) $(PostPotentialFlow_SOURCES) $(PressureStabilizedNS2D_SOURCES) $(PressureStabilizedNS3D_SOURCES) $(PressureVessel2D_SOURCES) $(RadiationDiffusion1D_SOURCES) $(ReadField_SOURCES) $(VSNS2D_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am $(top_srcdir)/Makefile.common $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  examples-tutorial/c++/Makefile
Makefile: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)
ControlCDR-ControlCDR.$(OBJEXT): $(srcdir)/ControlCDR.cpp
ControlCDR$(EXEEXT): $(ControlCDR_OBJECTS) $(ControlCDR_DEPENDENCIES) 
	@rm -f ControlCDR$(EXEEXT)
	$(CXXLINK) $(ControlCDR_LDFLAGS) $(ControlCDR_OBJECTS) $(ControlCDR_LDADD) $(LIBS)
CubicCDR-CubicCDR.$(OBJEXT): $(srcdir)/CubicCDR.cpp
CubicCDR$(EXEEXT): $(CubicCDR_OBJECTS) $(CubicCDR_DEPENDENCIES) 
	@rm -f CubicCDR$(EXEEXT)
	$(CXXLINK) $(CubicCDR_LDFLAGS) $(CubicCDR_OBJECTS) $(CubicCDR_LDADD) $(LIBS)
Exo2Triangle-Exo2Triangle.$(OBJEXT): $(srcdir)/Exo2Triangle.cpp
Exo2Triangle$(EXEEXT): $(Exo2Triangle_OBJECTS) $(Exo2Triangle_DEPENDENCIES) 
	@rm -f Exo2Triangle$(EXEEXT)
	$(CXXLINK) $(Exo2Triangle_LDFLAGS) $(Exo2Triangle_OBJECTS) $(Exo2Triangle_LDADD) $(LIBS)
PostPotentialFlow-PostPotentialFlow.$(OBJEXT): \
	$(srcdir)/PostPotentialFlow.cpp
PostPotentialFlow$(EXEEXT): $(PostPotentialFlow_OBJECTS) $(PostPotentialFlow_DEPENDENCIES) 
	@rm -f PostPotentialFlow$(EXEEXT)
	$(CXXLINK) $(PostPotentialFlow_LDFLAGS) $(PostPotentialFlow_OBJECTS) $(PostPotentialFlow_LDADD) $(LIBS)
PressureStabilizedNS2D-PressureStabilizedNS2D.$(OBJEXT): \
	$(srcdir)/PressureStabilizedNS2D.cpp
PressureStabilizedNS2D$(EXEEXT): $(PressureStabilizedNS2D_OBJECTS) $(PressureStabilizedNS2D_DEPENDENCIES) 
	@rm -f PressureStabilizedNS2D$(EXEEXT)
	$(CXXLINK) $(PressureStabilizedNS2D_LDFLAGS) $(PressureStabilizedNS2D_OBJECTS) $(PressureStabilizedNS2D_LDADD) $(LIBS)
PressureStabilizedNS3D-PressureStabilizedNS3D.$(OBJEXT): \
	$(srcdir)/PressureStabilizedNS3D.cpp
PressureStabilizedNS3D$(EXEEXT): $(PressureStabilizedNS3D_OBJECTS) $(PressureStabilizedNS3D_DEPENDENCIES) 
	@rm -f PressureStabilizedNS3D$(EXEEXT)
	$(CXXLINK) $(PressureStabilizedNS3D_LDFLAGS) $(PressureStabilizedNS3D_OBJECTS) $(PressureStabilizedNS3D_LDADD) $(LIBS)
PressureVessel2D-PressureVessel2D.$(OBJEXT): \
	$(srcdir)/PressureVessel2D.cpp
PressureVessel2D$(EXEEXT): $(PressureVessel2D_OBJECTS) $(PressureVessel2D_DEPENDENCIES) 
	@rm -f PressureVessel2D$(EXEEXT)
	$(CXXLINK) $(PressureVessel2D_LDFLAGS) $(PressureVessel2D_OBJECTS) $(PressureVessel2D_LDADD) $(LIBS)
RadiationDiffusion1D-RadiationDiffusion1D.$(OBJEXT): \
	$(srcdir)/RadiationDiffusion1D.cpp
RadiationDiffusion1D$(EXEEXT): $(RadiationDiffusion1D_OBJECTS) $(RadiationDiffusion1D_DEPENDENCIES) 
	@rm -f RadiationDiffusion1D$(EXEEXT)
	$(CXXLINK) $(RadiationDiffusion1D_LDFLAGS) $(RadiationDiffusion1D_OBJECTS) $(RadiationDiffusion1D_LDADD) $(LIBS)
ReadField-ReadField.$(OBJEXT): $(srcdir)/ReadField.cpp
ReadField$(EXEEXT): $(ReadField_OBJECTS) $(ReadField_DEPENDENCIES) 
	@rm -f ReadField$(EXEEXT)
	$(CXXLINK) $(ReadField_LDFLAGS) $(ReadField_OBJECTS) $(ReadField_LDADD) $(LIBS)
VSNS2D-VSNS2D.$(OBJEXT): $(srcdir)/VSNS2D.cpp
VSNS2D$(EXEEXT): $(VSNS2D_OBJECTS) $(VSNS2D_DEPENDENCIES) 
	@rm -f VSNS2D$(EXEEXT)
	$(CXXLINK) $(VSNS2D_LDFLAGS) $(VSNS2D_OBJECTS) $(VSNS2D_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ControlCDR-ControlCDR.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CubicCDR-CubicCDR.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Exo2Triangle-Exo2Triangle.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PostPotentialFlow-PostPotentialFlow.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PressureStabilizedNS2D-PressureStabilizedNS2D.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PressureStabilizedNS3D-PressureStabilizedNS3D.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PressureVessel2D-PressureVessel2D.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RadiationDiffusion1D-RadiationDiffusion1D.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ReadField-ReadField.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/VSNS2D-VSNS2D.Po@am__quote@

distclean-depend:
	-rm -rf ./$(DEPDIR)

.cpp.o:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cpp.obj:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXXCOMPILE) -c -o $@ `cygpath -w $<`

ControlCDR-ControlCDR.o: $(srcdir)/ControlCDR.cpp
@AMDEP_TRUE@	source='$(srcdir)/ControlCDR.cpp' object='ControlCDR-ControlCDR.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ControlCDR-ControlCDR.Po' tmpdepfile='$(DEPDIR)/ControlCDR-ControlCDR.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ControlCDR_CXXFLAGS) $(CXXFLAGS) -c -o ControlCDR-ControlCDR.o `test -f '$(srcdir)/ControlCDR.cpp' || echo '$(srcdir)/'`$(srcdir)/ControlCDR.cpp

ControlCDR-ControlCDR.obj: $(srcdir)/ControlCDR.cpp
@AMDEP_TRUE@	source='$(srcdir)/ControlCDR.cpp' object='ControlCDR-ControlCDR.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ControlCDR-ControlCDR.Po' tmpdepfile='$(DEPDIR)/ControlCDR-ControlCDR.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ControlCDR_CXXFLAGS) $(CXXFLAGS) -c -o ControlCDR-ControlCDR.obj `cygpath -w $(srcdir)/ControlCDR.cpp`

CubicCDR-CubicCDR.o: $(srcdir)/CubicCDR.cpp
@AMDEP_TRUE@	source='$(srcdir)/CubicCDR.cpp' object='CubicCDR-CubicCDR.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/CubicCDR-CubicCDR.Po' tmpdepfile='$(DEPDIR)/CubicCDR-CubicCDR.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(CubicCDR_CXXFLAGS) $(CXXFLAGS) -c -o CubicCDR-CubicCDR.o `test -f '$(srcdir)/CubicCDR.cpp' || echo '$(srcdir)/'`$(srcdir)/CubicCDR.cpp

CubicCDR-CubicCDR.obj: $(srcdir)/CubicCDR.cpp
@AMDEP_TRUE@	source='$(srcdir)/CubicCDR.cpp' object='CubicCDR-CubicCDR.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/CubicCDR-CubicCDR.Po' tmpdepfile='$(DEPDIR)/CubicCDR-CubicCDR.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(CubicCDR_CXXFLAGS) $(CXXFLAGS) -c -o CubicCDR-CubicCDR.obj `cygpath -w $(srcdir)/CubicCDR.cpp`

Exo2Triangle-Exo2Triangle.o: $(srcdir)/Exo2Triangle.cpp
@AMDEP_TRUE@	source='$(srcdir)/Exo2Triangle.cpp' object='Exo2Triangle-Exo2Triangle.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Exo2Triangle-Exo2Triangle.Po' tmpdepfile='$(DEPDIR)/Exo2Triangle-Exo2Triangle.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Exo2Triangle_CXXFLAGS) $(CXXFLAGS) -c -o Exo2Triangle-Exo2Triangle.o `test -f '$(srcdir)/Exo2Triangle.cpp' || echo '$(srcdir)/'`$(srcdir)/Exo2Triangle.cpp

Exo2Triangle-Exo2Triangle.obj: $(srcdir)/Exo2Triangle.cpp
@AMDEP_TRUE@	source='$(srcdir)/Exo2Triangle.cpp' object='Exo2Triangle-Exo2Triangle.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Exo2Triangle-Exo2Triangle.Po' tmpdepfile='$(DEPDIR)/Exo2Triangle-Exo2Triangle.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Exo2Triangle_CXXFLAGS) $(CXXFLAGS) -c -o Exo2Triangle-Exo2Triangle.obj `cygpath -w $(srcdir)/Exo2Triangle.cpp`

PostPotentialFlow-PostPotentialFlow.o: $(srcdir)/PostPotentialFlow.cpp
@AMDEP_TRUE@	source='$(srcdir)/PostPotentialFlow.cpp' object='PostPotentialFlow-PostPotentialFlow.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/PostPotentialFlow-PostPotentialFlow.Po' tmpdepfile='$(DEPDIR)/PostPotentialFlow-PostPotentialFlow.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(PostPotentialFlow_CXXFLAGS) $(CXXFLAGS) -c -o PostPotentialFlow-PostPotentialFlow.o `test -f '$(srcdir)/PostPotentialFlow.cpp' || echo '$(srcdir)/'`$(srcdir)/PostPotentialFlow.cpp

PostPotentialFlow-PostPotentialFlow.obj: $(srcdir)/PostPotentialFlow.cpp
@AMDEP_TRUE@	source='$(srcdir)/PostPotentialFlow.cpp' object='PostPotentialFlow-PostPotentialFlow.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/PostPotentialFlow-PostPotentialFlow.Po' tmpdepfile='$(DEPDIR)/PostPotentialFlow-PostPotentialFlow.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(PostPotentialFlow_CXXFLAGS) $(CXXFLAGS) -c -o PostPotentialFlow-PostPotentialFlow.obj `cygpath -w $(srcdir)/PostPotentialFlow.cpp`

PressureStabilizedNS2D-PressureStabilizedNS2D.o: $(srcdir)/PressureStabilizedNS2D.cpp
@AMDEP_TRUE@	source='$(srcdir)/PressureStabilizedNS2D.cpp' object='PressureStabilizedNS2D-PressureStabilizedNS2D.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/PressureStabilizedNS2D-PressureStabilizedNS2D.Po' tmpdepfile='$(DEPDIR)/PressureStabilizedNS2D-PressureStabilizedNS2D.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(PressureStabilizedNS2D_CXXFLAGS) $(CXXFLAGS) -c -o PressureStabilizedNS2D-PressureStabilizedNS2D.o `test -f '$(srcdir)/PressureStabilizedNS2D.cpp' || echo '$(srcdir)/'`$(srcdir)/PressureStabilizedNS2D.cpp

PressureStabilizedNS2D-PressureStabilizedNS2D.obj: $(srcdir)/PressureStabilizedNS2D.cpp
@AMDEP_TRUE@	source='$(srcdir)/PressureStabilizedNS2D.cpp' object='PressureStabilizedNS2D-PressureStabilizedNS2D.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/PressureStabilizedNS2D-PressureStabilizedNS2D.Po' tmpdepfile='$(DEPDIR)/PressureStabilizedNS2D-PressureStabilizedNS2D.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(PressureStabilizedNS2D_CXXFLAGS) $(CXXFLAGS) -c -o PressureStabilizedNS2D-PressureStabilizedNS2D.obj `cygpath -w $(srcdir)/PressureStabilizedNS2D.cpp`

PressureStabilizedNS3D-PressureStabilizedNS3D.o: $(srcdir)/PressureStabilizedNS3D.cpp
@AMDEP_TRUE@	source='$(srcdir)/PressureStabilizedNS3D.cpp' object='PressureStabilizedNS3D-PressureStabilizedNS3D.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/PressureStabilizedNS3D-PressureStabilizedNS3D.Po' tmpdepfile='$(DEPDIR)/PressureStabilizedNS3D-PressureStabilizedNS3D.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(PressureStabilizedNS3D_CXXFLAGS) $(CXXFLAGS) -c -o PressureStabilizedNS3D-PressureStabilizedNS3D.o `test -f '$(srcdir)/PressureStabilizedNS3D.cpp' || echo '$(srcdir)/'`$(srcdir)/PressureStabilizedNS3D.cpp

PressureStabilizedNS3D-PressureStabilizedNS3D.obj: $(srcdir)/PressureStabilizedNS3D.cpp
@AMDEP_TRUE@	source='$(srcdir)/PressureStabilizedNS3D.cpp' object='PressureStabilizedNS3D-PressureStabilizedNS3D.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/PressureStabilizedNS3D-PressureStabilizedNS3D.Po' tmpdepfile='$(DEPDIR)/PressureStabilizedNS3D-PressureStabilizedNS3D.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(PressureStabilizedNS3D_CXXFLAGS) $(CXXFLAGS) -c -o PressureStabilizedNS3D-PressureStabilizedNS3D.obj `cygpath -w $(srcdir)/PressureStabilizedNS3D.cpp`

PressureVessel2D-PressureVessel2D.o: $(srcdir)/PressureVessel2D.cpp
@AMDEP_TRUE@	source='$(srcdir)/PressureVessel2D.cpp' object='PressureVessel2D-PressureVessel2D.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/PressureVessel2D-PressureVessel2D.Po' tmpdepfile='$(DEPDIR)/PressureVessel2D-PressureVessel2D.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(PressureVessel2D_CXXFLAGS) $(CXXFLAGS) -c -o PressureVessel2D-PressureVessel2D.o `test -f '$(srcdir)/PressureVessel2D.cpp' || echo '$(srcdir)/'`$(srcdir)/PressureVessel2D.cpp

PressureVessel2D-PressureVessel2D.obj: $(srcdir)/PressureVessel2D.cpp
@AMDEP_TRUE@	source='$(srcdir)/PressureVessel2D.cpp' object='PressureVessel2D-PressureVessel2D.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/PressureVessel2D-PressureVessel2D.Po' tmpdepfile='$(DEPDIR)/PressureVessel2D-PressureVessel2D.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(PressureVessel2D_CXXFLAGS) $(CXXFLAGS) -c -o PressureVessel2D-PressureVessel2D.obj `cygpath -w $(srcdir)/PressureVessel2D.cpp`

RadiationDiffusion1D-RadiationDiffusion1D.o: $(srcdir)/RadiationDiffusion1D.cpp
@AMDEP_TRUE@	source='$(srcdir)/RadiationDiffusion1D.cpp' object='RadiationDiffusion1D-RadiationDiffusion1D.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/RadiationDiffusion1D-RadiationDiffusion1D.Po' tmpdepfile='$(DEPDIR)/RadiationDiffusion1D-RadiationDiffusion1D.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RadiationDiffusion1D_CXXFLAGS) $(CXXFLAGS) -c -o RadiationDiffusion1D-RadiationDiffusion1D.o `test -f '$(srcdir)/RadiationDiffusion1D.cpp' || echo '$(srcdir)/'`$(srcdir)/RadiationDiffusion1D.cpp

RadiationDiffusion1D-RadiationDiffusion1D.obj: $(srcdir)/RadiationDiffusion1D.cpp
@AMDEP_TRUE@	source='$(srcdir)/RadiationDiffusion1D.cpp' object='RadiationDiffusion1D-RadiationDiffusion1D.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/RadiationDiffusion1D-RadiationDiffusion1D.Po' tmpdepfile='$(DEPDIR)/RadiationDiffusion1D-RadiationDiffusion1D.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RadiationDiffusion1D_CXXFLAGS) $(CXXFLAGS) -c -o RadiationDiffusion1D-RadiationDiffusion1D.obj `cygpath -w $(srcdir)/RadiationDiffusion1D.cpp`

ReadField-ReadField.o: $(srcdir)/ReadField.cpp
@AMDEP_TRUE@	source='$(srcdir)/ReadField.cpp' object='ReadField-ReadField.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ReadField-ReadField.Po' tmpdepfile='$(DEPDIR)/ReadField-ReadField.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ReadField_CXXFLAGS) $(CXXFLAGS) -c -o ReadField-ReadField.o `test -f '$(srcdir)/ReadField.cpp' || echo '$(srcdir)/'`$(srcdir)/ReadField.cpp

ReadField-ReadField.obj: $(srcdir)/ReadField.cpp
@AMDEP_TRUE@	source='$(srcdir)/ReadField.cpp' object='ReadField-ReadField.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ReadField-ReadField.Po' tmpdepfile='$(DEPDIR)/ReadField-ReadField.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ReadField_CXXFLAGS) $(CXXFLAGS) -c -o ReadField-ReadField.obj `cygpath -w $(srcdir)/ReadField.cpp`

VSNS2D-VSNS2D.o: $(srcdir)/VSNS2D.cpp
@AMDEP_TRUE@	source='$(srcdir)/VSNS2D.cpp' object='VSNS2D-VSNS2D.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/VSNS2D-VSNS2D.Po' tmpdepfile='$(DEPDIR)/VSNS2D-VSNS2D.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(VSNS2D_CXXFLAGS) $(CXXFLAGS) -c -o VSNS2D-VSNS2D.o `test -f '$(srcdir)/VSNS2D.cpp' || echo '$(srcdir)/'`$(srcdir)/VSNS2D.cpp

VSNS2D-VSNS2D.obj: $(srcdir)/VSNS2D.cpp
@AMDEP_TRUE@	source='$(srcdir)/VSNS2D.cpp' object='VSNS2D-VSNS2D.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/VSNS2D-VSNS2D.Po' tmpdepfile='$(DEPDIR)/VSNS2D-VSNS2D.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(VSNS2D_CXXFLAGS) $(CXXFLAGS) -c -o VSNS2D-VSNS2D.obj `cygpath -w $(srcdir)/VSNS2D.cpp`
CXXDEPMODE = @CXXDEPMODE@
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; \
	srcdir=$(srcdir); export srcdir; \
	list='$(TESTS)'; \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
	        xpass=`expr $$xpass + 1`; \
	        failed=`expr $$failed + 1`; \
	        echo "XPASS: $$tst"; \
	      ;; \
	      *) \
	        echo "PASS: $$tst"; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
	        xfail=`expr $$xfail + 1`; \
	        echo "XFAIL: $$tst"; \
	      ;; \
	      *) \
	        failed=`expr $$failed + 1`; \
	        echo "FAIL: $$tst"; \
	      ;; \
	      esac; \
	    fi; \
	  done; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="All $$all tests passed"; \
	    else \
	      banner="All $$all tests behaved as expected ($$xfail expected failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all tests failed"; \
	    else \
	      banner="$$failed of $$all tests did not behave as expected ($$xpass unexpected passes)"; \
	    fi; \
	  fi; \
	  dashes=`echo "$$banner" | sed s/./=/g`; \
	  echo "$$dashes"; \
	  echo "$$banner"; \
	  echo "$$dashes"; \
	  test "$$failed" -eq 0; \
	else :; fi
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ../..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(PROGRAMS)

installdirs:

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

uninstall-am: uninstall-info-am

.PHONY: GTAGS all all-am check check-TESTS check-am clean clean-generic \
	clean-noinstPROGRAMS distclean distclean-compile \
	distclean-depend distclean-generic distclean-tags distdir dvi \
	dvi-am info info-am install install-am install-data \
	install-data-am install-exec install-exec-am install-info \
	install-info-am install-man install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic tags uninstall uninstall-am \
	uninstall-info-am


%.tst : %.exe $(REQUIREMENTS)
	./$< > $@ 2>&1

run: $(TESTS)

# ------------------------------------------------------------------------
#
# ------------------------------------------------------------------------

include $(top_builddir)/Makefile.site.sundance
include $(top_builddir)/Makefile.export.TSFExtended
include $(TRILINOS_DIR)/packages/teuchos/Makefile.export
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
