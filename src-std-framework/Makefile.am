# @HEADER
# @HEADER

#np# Note the following paragraph.
# ------------------------------------------------------------------------
# For each category, create two variables - NAME and NAME_H. The
# second is the list of headers to be installed, i.e., any header that
# might someday be needed by some other code outside New_Package. The first is
# the list of all source and any other header files.
# ------------------------------------------------------------------------

#
#np# There is, at present, no distinction between most of the categories, 
#np# other than those which start with EXTRA_.  All categories which do not
#np# start with EXTRA_ are included in all builds.  Categories which start
#np# with EXTRA_ are included in some builds (typically controlled by 
#np# --with-xyz or --without-xyz)
#
#np# Make sure to list all source files in one of the following categories.


SUNDANCE_CELLFILTERS_H = \
$(top_srcdir)/src-std-framework/CellFilter/SundanceBinaryCellFilter.hpp\
$(top_srcdir)/src-std-framework/CellFilter/SundanceCellFilterBase.hpp\
$(top_srcdir)/src-std-framework/CellFilter/SundanceCellFilter.hpp\
$(top_srcdir)/src-std-framework/CellFilter/SundanceCellIterator.hpp\
$(top_srcdir)/src-std-framework/CellFilter/SundanceCellPredicateBase.hpp\
$(top_srcdir)/src-std-framework/CellFilter/SundanceCellPredicate.hpp\
$(top_srcdir)/src-std-framework/CellFilter/SundanceCellSetBase.hpp\
$(top_srcdir)/src-std-framework/CellFilter/SundanceCellSet.hpp\
$(top_srcdir)/src-std-framework/CellFilter/SundanceDimensionalCellFilter.hpp\
$(top_srcdir)/src-std-framework/CellFilter/SundanceExplicitCellIterator.hpp\
$(top_srcdir)/src-std-framework/CellFilter/SundanceExplicitCellSet.hpp\
$(top_srcdir)/src-std-framework/CellFilter/SundanceImplicitCellSet.hpp\
$(top_srcdir)/src-std-framework/CellFilter/SundanceLabelCellPredicate.hpp\
$(top_srcdir)/src-std-framework/CellFilter/SundanceMaximalCellFilter.hpp\
$(top_srcdir)/src-std-framework/CellFilter/SundancePositionalCellPredicate.hpp\
$(top_srcdir)/src-std-framework/CellFilter/SundanceSubsetCellFilter.hpp

SUNDANCE_CELLFILTERS = \
$(top_srcdir)/src-std-framework/CellFilter/SundanceBinaryCellFilter.cpp\
$(top_srcdir)/src-std-framework/CellFilter/SundanceCellFilterBase.cpp\
$(top_srcdir)/src-std-framework/CellFilter/SundanceCellFilter.cpp\
$(top_srcdir)/src-std-framework/CellFilter/SundanceCellIterator.cpp\
$(top_srcdir)/src-std-framework/CellFilter/SundanceCellPredicateBase.cpp\
$(top_srcdir)/src-std-framework/CellFilter/SundanceCellPredicate.cpp\
$(top_srcdir)/src-std-framework/CellFilter/SundanceCellSetBase.cpp\
$(top_srcdir)/src-std-framework/CellFilter/SundanceCellSet.cpp\
$(top_srcdir)/src-std-framework/CellFilter/SundanceDimensionalCellFilter.cpp\
$(top_srcdir)/src-std-framework/CellFilter/SundanceExplicitCellSet.cpp\
$(top_srcdir)/src-std-framework/CellFilter/SundanceImplicitCellSet.cpp\
$(top_srcdir)/src-std-framework/CellFilter/SundanceLabelCellPredicate.cpp\
$(top_srcdir)/src-std-framework/CellFilter/SundanceMaximalCellFilter.cpp\
$(top_srcdir)/src-std-framework/CellFilter/SundancePositionalCellPredicate.cpp\
$(top_srcdir)/src-std-framework/CellFilter/SundanceSubsetCellFilter.cpp

SUNDANCE_ELEMENTS_H = \
$(top_srcdir)/src-std-framework/Elements/SundanceADReal.hpp \
$(top_srcdir)/src-std-framework/Elements/SundanceBasisFamilyBase.hpp \
$(top_srcdir)/src-std-framework/Elements/SundanceBasisFamily.hpp \
$(top_srcdir)/src-std-framework/Elements/SundanceDiscreteFunction.hpp \
$(top_srcdir)/src-std-framework/Elements/SundanceGauss1D.hpp \
$(top_srcdir)/src-std-framework/Elements/SundanceGaussianQuadrature.hpp \
$(top_srcdir)/src-std-framework/Elements/SundanceLagrange.hpp \
$(top_srcdir)/src-std-framework/Elements/SundanceQuadratureFamily.hpp \
$(top_srcdir)/src-std-framework/Elements/SundanceQuadratureFamilyBase.hpp \
$(top_srcdir)/src-std-framework/Elements/SundanceScalarBasis.hpp \
$(top_srcdir)/src-std-framework/Elements/SundanceTestFunction.hpp \
$(top_srcdir)/src-std-framework/Elements/SundanceTriangleQuadrature.hpp \
$(top_srcdir)/src-std-framework/Elements/SundanceUnknownFunction.hpp

SUNDANCE_ELEMENTS = \
$(top_srcdir)/src-std-framework/Elements/SundanceADReal.cpp\
$(top_srcdir)/src-std-framework/Elements/SundanceBasisFamilyBase.cpp\
$(top_srcdir)/src-std-framework/Elements/SundanceBasisFamily.cpp\
$(top_srcdir)/src-std-framework/Elements/SundanceGauss1D.cpp\
$(top_srcdir)/src-std-framework/Elements/SundanceGaussianQuadrature.cpp\
$(top_srcdir)/src-std-framework/Elements/SundanceLagrange.cpp\
$(top_srcdir)/src-std-framework/Elements/SundanceQuadratureFamily.cpp \
$(top_srcdir)/src-std-framework/Elements/SundanceQuadratureFamilyBase.cpp \
$(top_srcdir)/src-std-framework/Elements/SundanceTriangleQuadrature.cpp

SUNDANCE_DOFMAPPING_H = \
$(top_srcdir)/src-std-framework/DOFMapping/SundanceDOFMapBase.hpp\
$(top_srcdir)/src-std-framework/DOFMapping/SundanceDOFMapBuilder.hpp\
$(top_srcdir)/src-std-framework/DOFMapping/SundanceHomogeneousDOFMap.hpp

SUNDANCE_DOFMAPPING = \
$(top_srcdir)/src-std-framework/DOFMapping/SundanceDOFMapBase.cpp\
$(top_srcdir)/src-std-framework/DOFMapping/SundanceDOFMapBuilder.cpp\
$(top_srcdir)/src-std-framework/DOFMapping/SundanceHomogeneousDOFMap.cpp

SUNDANCE_ASSEMBLY_H = \
$(top_srcdir)/src-std-framework/Assembly/SundanceAssembler.hpp \
$(top_srcdir)/src-std-framework/Assembly/SundanceBasicInserter.hpp \
$(top_srcdir)/src-std-framework/Assembly/SundanceBasicIntegrator.hpp \
$(top_srcdir)/src-std-framework/Assembly/SundanceInserterBase.hpp \
$(top_srcdir)/src-std-framework/Assembly/SundanceInserterFactoryBase.hpp \
$(top_srcdir)/src-std-framework/Assembly/SundanceIntegratorBase.hpp \
$(top_srcdir)/src-std-framework/Assembly/SundanceIntegratorFactoryBase.hpp \
$(top_srcdir)/src-std-framework/Assembly/SundanceLocalMatrixContainer.hpp \
$(top_srcdir)/src-std-framework/Assembly/SundanceQuadratureEvalMediator.hpp \
$(top_srcdir)/src-std-framework/Assembly/SundanceStdFwkEvalMediator.hpp 

SUNDANCE_ASSEMBLY = \
$(top_srcdir)/src-std-framework/Assembly/SundanceAssembler.cpp \
$(top_srcdir)/src-std-framework/Assembly/SundanceBasicInserter.cpp \
$(top_srcdir)/src-std-framework/Assembly/SundanceBasicIntegrator.cpp \
$(top_srcdir)/src-std-framework/Assembly/SundanceInserterBase.cpp \
$(top_srcdir)/src-std-framework/Assembly/SundanceIntegratorBase.cpp \
$(top_srcdir)/src-std-framework/Assembly/SundanceLocalMatrixContainer.cpp \
$(top_srcdir)/src-std-framework/Assembly/SundanceQuadratureEvalMediator.cpp 





STD_FWK_SOURCES = \
$(SUNDANCE_CELLFILTERS) \
$(SUNDANCE_ELEMENTS) \
$(SUNDANCE_DOFMAPPING) \
$(SUNDANCE_ASSEMBLY) 

STD_FWK_SOURCES_H = \
$(SUNDANCE_CELLFILTERS_H) \
$(SUNDANCE_ELEMENTS_H) \
$(SUNDANCE_DOFMAPPING_H)  \
$(SUNDANCE_ASSEMBLY_H) 


include $(top_srcdir)/Makefile.common

#
#np#  Files which are included in select builds are typically have
#np#  names that start with EXTRA
#
#np#  EXTRA_MPI is control by --with-mpi and --without-mpi which is
#np#  set up by TAC_ARC_CONFIG_MPI 
#
EXTRA_MPI_H =

EXTRA_MPI = 

if HAVE_MPI 
MPI_H = \
	$(EXTRA_MPI_H)
MPI = \
	$(EXTRA_MPI)

else

MPI_H =
MPI =

endif

AM_CPPFLAGS = $(STD_FWK_INCLUDES)

# ------------------------------------------------------------------------
# Sundance library specifications
# ------------------------------------------------------------------------

STD_FWK_LIB = libsundanceStdFwk.a


#np# replace new_package with the name of the package being autotool'ed here
libsundanceStdFwk_a_SOURCES = $(STD_FWK_SOURCES)

#np# replace new_package with the name of the package being autotool'ed here
EXTRA_libsundanceStdFwk_a_SOURCES = \
$(EXTRA_MPI) \
$(EXTRA_MPI_H) 

#We need the following to support separate build directories
#AM_CPPFLAGS=-I$(builddir)/src
# ------------------------------------------------------------------------
# For using a special archiver
# ------------------------------------------------------------------------

# SPECIAL NOTE: Why is the "else" there?  For some reason, automake
# fails to define <lib>_AR of USE_ALTERNATE_AR is false, so we have to
# define it manually.

if USE_ALTERNATE_AR

libsundanceStdFwk_a_AR = $(ALTERNATE_AR)
else

libsundanceStdFwk_a_AR = $(AR) cru

endif

# ------------------------------------------------------------------------
# Some C++ compilers create extra .o-files for templates. We need to
# be sure to include these, and this is the hack to do it.
# ------------------------------------------------------------------------

libsundanceStdFwk_a_LIBADD = $(SUNDANCE_TEMPLATE_OBJS) $(XTRALDADD) 

# ------------------------------------------------------------------------
# List of all libraries to install in $(libexecdir)
# ------------------------------------------------------------------------

lib_LIBRARIES = $(STD_FWK_LIB)

# ------------------------------------------------------------------------
# List of all headers to install in $(includedir)
# ------------------------------------------------------------------------

include_HEADERS = $(STD_FWK_SOURCES_H) 

# ------------------------------------------------------------------------
# Special stuff to install in our special $(execincludedir)
# ------------------------------------------------------------------------

# SundanceConfig.h was installed when the utiities were built, so skip it.

execincludedir = $(exec_prefix)/include
nodist_execinclude_HEADERS = 

# ------------------------------------------------------------------------
# Files to be deleted by 'make maintainer-clean'
# ------------------------------------------------------------------------

MAINTAINERCLEANFILES = Makefile.in 








